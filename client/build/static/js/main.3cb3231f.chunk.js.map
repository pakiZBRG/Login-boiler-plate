{"version":3,"sources":["assets/login.jpg","assets/register.jpg","assets/activation.jpg","assets/forgotpassword.jpg","assets/resetpassword.jpg","helpers/auth.js","components/Home.jsx","components/Login.jsx","components/Register.jsx","components/Activation.jsx","components/ForgotPassword.jsx","components/ResetPassword.jsx","components/User.jsx","App.js","index.js"],"names":["module","exports","isAuth","token","cookie","get","loggedUser","localStorage","getItem","JSON","parse","Home","match","useState","username","email","userData","setUserData","signal","AbortController","useEffect","userId","user","length","axios","replace","then","res","id","data","_id","catch","err","toast","error","response","params","className","style","color","to","marginRight","Login","history","password","handleChange","text","e","target","value","responseGoogle","tokenId","post","idToken","redirectUser","next","set","expires","setItem","stringify","googleAuth","push","onSubmit","preventDefault","authenticate","type","onChange","placeholder","autoComplete","margin","fontWeight","clientId","process","onSuccess","onFailure","cookiePolicy","render","renderProps","onClick","disabled","appId","autoLoad","callback","userID","accessToken","src","image","alt","Register","passwordConfirm","success","message","jwt","decode","ForgotPassword","textAlign","marginBottom","ResetPassword","confirmPassword","put","newPassword","resetPasswordLink","User","remove","removeItem","App","exact","path","component","Activation","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3cb3231f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login.24e18e7d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/register.624ce12d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/activation.527a4225.jpg\";","module.exports = __webpack_public_path__ + \"static/media/forgotpassword.5b03f3b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/resetpassword.e5585993.jpg\";","import cookie from 'js-cookie';\r\n\r\nexport const authenticate = (res, next) => {\r\n    cookie.set('token', res.data.token, {expires: 1});\r\n    localStorage.setItem('user', JSON.stringify(res.data.user.id))\r\n    next();\r\n}\r\n\r\n// id => _id\r\nexport const googleAuth = (res, next) => {\r\n    cookie.set('token', res.data.token, {expires: 1});\r\n    localStorage.setItem('user', JSON.stringify(res.data.user._id))\r\n    next();\r\n}\r\n\r\nexport const isAuth = () => {\r\n    const token = cookie.get('token');\r\n    const loggedUser = localStorage.getItem('user');\r\n    if(token && loggedUser){\r\n        return JSON.parse(loggedUser);\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const signout = next => {\r\n    cookie.remove('token', {expires: 1});\r\n    localStorage.removeItem('user');\r\n    next();\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { isAuth } from '../helpers/auth';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Home({match}) {\r\n    const [userData, setUserData] = useState({\r\n        username: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    //Abort Signal -> React warning appeared\r\n    const controller = new AbortController()\r\n    const signal = controller.signal\r\n\r\n    useEffect(() => {\r\n        let userId = localStorage.user;\r\n        if(localStorage.length){\r\n            //Get logged user\r\n            axios.get(`/users/${userId.replace(/['\"]+/g, '')}`, {signal})\r\n                .then(res => {\r\n                    setUserData({\r\n                        id: res.data._id,\r\n                        username: res.data.username,\r\n                        email: res.data.email\r\n                    })\r\n                })\r\n                .catch(err => toast.error(err.response.data.error));\r\n        }\r\n    }, [match.params]);\r\n\r\n    const {username, id} = userData;\r\n\r\n    return (\r\n        <div className='background'>\r\n            \r\n            <div className='background-white'>\r\n                {isAuth() ?\r\n                    <div className='background-login'>\r\n                        <h2>You are currently logged in, <span style={{color: 'crimson'}}>{username}</span></h2>\r\n                        <Link to={`/user/${id}`}>\r\n                            <button><i className='fa fa-user' style={{marginRight: '0.4rem'}}></i>Profile</button>\r\n                        </Link>\r\n                    </div>\r\n                        :\r\n                    <div className='background-login'>\r\n                        <h2>Login or Register to access our content!</h2>\r\n                        <Link to='/login'>\r\n                            <button>\r\n                                <i className='fa fa-user' style={{marginRight: '0.4rem'}}></i>Login\r\n                            </button>\r\n                        </Link>\r\n                        <Link to='/register'>\r\n                            <button>\r\n                                <i className='fa fa-user-plus' style={{marginRight: '0.4rem'}}></i>Register\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport image from '../assets/login.jpg';\r\nimport axios from 'axios';\r\nimport { authenticate, googleAuth, isAuth } from '../helpers/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\n\r\n\r\nexport default function Login({history}) {\r\n    const [userData, setUserData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    });\r\n\r\n    const handleChange = text => e => setUserData({...userData, [text]: e.target.value});\r\n    \r\n    const {email, password} = userData;\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(email && password) { \r\n            axios.post('/users/login', {email ,password})\r\n                .then(res => {\r\n                    authenticate(res, () => {\r\n                        setUserData({\r\n                            ...userData,\r\n                            email: \"\",\r\n                            password: \"\"\r\n                        });\r\n                    });\r\n                    if(isAuth()){\r\n                        history.push(`/user/${res.data.user.id}`);\r\n                    }\r\n                })\r\n                .catch(err => toast.error(err.response.data.error));\r\n        } else {\r\n            toast.error('Please fill all fields');\r\n        }\r\n    }\r\n\r\n    //Google Login\r\n    const sendGoogleToken = tokenId => {    \r\n        axios.post('users/googlelogin', {idToken: tokenId})\r\n            .then(res => redirectUser(res))\r\n            .catch(() => toast.error('Google login error'))\r\n    };\r\n    const responseGoogle = response => sendGoogleToken(response.tokenId);\r\n\r\n    //Facebook Login\r\n    const sendFacebookToken = (userID, accessToken) => {\r\n        axios.post('users/facebooklogin', {userID, accessToken})\r\n            .then(res => redirectUser(res))\r\n            .catch(() => toast.error('Facebook login error.'))\r\n    };\r\n    const responseFacebook = response => sendFacebookToken(response.userID, response.accessToken);\r\n\r\n    //Redirect logged user via soacial media to his profile\r\n    const redirectUser = res => {\r\n        googleAuth(res, () => {\r\n            isAuth() && history.push(`/user/${res.data.user._id}`)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='background'>\r\n            {isAuth() ? <Redirect to='/'/> : null}\r\n            <ToastContainer/>\r\n            <div className='background-flex'>\r\n                <div className='flex-register'>\r\n                    <h2>Login</h2>\r\n                    <form className='flex-form' onSubmit={handleSubmit}>\r\n                        <input\r\n                            type='email'\r\n                            value={email}\r\n                            onChange={handleChange('email')}\r\n                            placeholder='Email'\r\n                            autoComplete=\"nope\"\r\n                        />\r\n                        <input\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={handleChange('password')}\r\n                            placeholder='Password'\r\n                        />\r\n                        <input type='submit' value='Login'/>\r\n                        <Link to='/forgotpassword' className='forgot-password'>Forgot password?</Link>\r\n                    </form>\r\n                    <span className='separator'><p style={{margin: '2.5rem 0'}}>or</p></span>\r\n                    <Link to='/register' className='login-btn' style={{fontWeight: 'bold'}}>\r\n                        <i className='fa fa-user-plus' style={{marginRight: '0.5rem'}}></i>Create an account\r\n                    </Link>\r\n                    <GoogleLogin\r\n                        clientId={`${process.env.REACT_APP_GOOGLE_CLIENT}`}\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                        render={renderProps => (\r\n                            <button\r\n                                onClick={renderProps.onClick}\r\n                                disabled={renderProps.disabled}\r\n                                className='login-btn google'\r\n                            >\r\n                                <i className='fa fa-google' style={{marginRight: '0.5rem'}}></i>Google\r\n                            </button>\r\n                        )}\r\n                    />\r\n                    <FacebookLogin\r\n                        appId={`${process.env.REACT_APP_FACEBOOK_CLIENT}`}\r\n                        autoLoad={false}\r\n                        callback={responseFacebook}\r\n                        render={renderProps => (\r\n                            <button\r\n                                onClick={renderProps.onClick}\r\n                                className='login-btn facebook'\r\n                            >\r\n                                <i className='fa fa-facebook' style={{marginRight: '0.5rem'}}></i>\r\n                                Sign in with Facebook\r\n                            </button>\r\n                        )}\r\n                    />\r\n                </div>\r\n                <img src={image} alt='login'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport image from '../assets/register.jpg';\r\nimport axios from 'axios';\r\nimport { isAuth } from '../helpers/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default function Register() {\r\n    const [userData, setUserData] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\"\r\n    });\r\n\r\n    const {username, email, password, passwordConfirm} = userData;\r\n\r\n    const handleChange = text => e => setUserData({...userData, [text]: e.target.value});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(username && email && password) { \r\n            if(password === passwordConfirm){\r\n                axios.post('/users/register', {username ,email ,password})\r\n                    .then(res => {\r\n                        setUserData({\r\n                            ...userData,\r\n                            username: \"\",\r\n                            email: \"\",\r\n                            password: \"\",\r\n                            passwordConfirm: \"\"\r\n                        })\r\n                        toast.success(res.data.message);\r\n                    })\r\n                    .catch(err => {\r\n                        toast.error(err.response.data.error)\r\n                    }) \r\n            } else {\r\n                toast.error('Passwords do not match');\r\n            }\r\n        } else {\r\n            toast.error('Please fill all fields');\r\n        }\r\n    }\r\n    return (\r\n        <div className='background'>\r\n            {isAuth() ? <Redirect to='/'/> : null}\r\n            <ToastContainer/>\r\n            <div className='background-flex'>\r\n                <div className='flex-register'>\r\n                    <h2>Create an Account</h2>\r\n                    <form className='flex-form' onSubmit={handleSubmit}>\r\n                        <input\r\n                            type='text'\r\n                            value={username}\r\n                            onChange={handleChange('username')}\r\n                            placeholder='Username'\r\n                        />\r\n                        <input\r\n                            type='email'\r\n                            value={email}\r\n                            onChange={handleChange('email')}\r\n                            placeholder='Email'\r\n                            autoComplete=\"nope\"\r\n                        />\r\n                        <input\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={handleChange('password')}\r\n                            placeholder='Password'\r\n                        />\r\n                        <input \r\n                            type='password'\r\n                            value={passwordConfirm}\r\n                            onChange={handleChange('passwordConfirm')}\r\n                            placeholder='Confirm password'\r\n                        />\r\n                        <input type='submit' value='Register'/>\r\n                    </form>\r\n                    <span className='separator'><p>or</p></span>\r\n                    <Link to='/login' className='login-btn' style={{fontWeight: 'bold'}}>\r\n                        <i className='fa fa-user' style={{marginRight: '0.5rem'}}></i>Login\r\n                    </Link>\r\n                    <Link to='/google' className='login-btn google'>\r\n                        <i className='fa fa-google' style={{marginRight: '0.5rem'}}></i>Google\r\n                    </Link>\r\n                    <Link to='/facebook' className='login-btn facebook'>\r\n                        <i className='fa fa-facebook' style={{marginRight: '0.5rem'}}></i>Facebook\r\n                    </Link>\r\n                </div>\r\n                <img src={image} alt='register'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport image from '../assets/activation.jpg';\r\nimport axios from 'axios';\r\nimport jwt from 'jsonwebtoken';\r\nimport { isAuth } from '../helpers/auth';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default function Register({match}) {\r\n    const [userData, setUserData] = useState({\r\n        username: \"\",\r\n        token: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n        let token = match.params.token;\r\n        let {username} = jwt.decode(token);\r\n        if(token){\r\n            setUserData({\r\n                ...userData,\r\n                username,\r\n                token\r\n            })\r\n        }\r\n    }, [match.params]);\r\n\r\n    const {username, token} = userData;\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        axios.post('/users/activation', {token})\r\n            .then(res => {\r\n                setUserData({...userData});\r\n                toast.success(res.data.message);\r\n            })\r\n            .catch(err => toast.error(err.response.data.error))\r\n    }\r\n    return (\r\n        <div className='background'>\r\n            {isAuth() ? <Redirect to='/'/> : null}\r\n            <ToastContainer/>\r\n            <div className='background-flex'>\r\n                <div className='flex-register'>\r\n                    <h2>Activate your account, {username}</h2>\r\n                    <form className='flex-form' onSubmit={handleSubmit}>\r\n                        <input type='submit' value='Activate'/>\r\n                    </form>\r\n                    <span className='separator'><p style={{margin: '4rem 0'}}>or</p></span>\r\n                    <Link to='/register' className='login-btn' style={{fontWeight: 'bold'}}>\r\n                        Register\r\n                    </Link>\r\n                    <Link to='/login' className='login-btn' style={{fontWeight: 'bold'}}>\r\n                        Login\r\n                    </Link>\r\n                </div>\r\n                <img src={image} alt='register'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport image from '../assets/forgotpassword.jpg';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nexport default function ForgotPassword() {\r\n    const [userData, setUserData] = useState({\r\n        email: \"\"\r\n    });\r\n\r\n    const {email} = userData;\r\n\r\n    const handleChange = text => e => setUserData({...userData, [text]: e.target.value});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if(email) {\r\n            axios.post('/users/forgotpassword', {email})\r\n                .catch(err => toast.error(err.response.data.error));\r\n        } else {\r\n            toast.error('Enter your email address');\r\n        }\r\n    }\r\n    return (\r\n        <div className='background'>\r\n            <ToastContainer/>\r\n            <div className='background-flex'>\r\n                <div className='flex-register'>\r\n                    <h2>Forgotten password</h2>\r\n                    <p style={{textAlign: 'center', marginBottom: '2rem'}}>Insert your email to receive link to reset your password. If no error occur, check your email</p>\r\n                    <form className='flex-form' onSubmit={handleSubmit}>\r\n                        <input\r\n                            type='email'\r\n                            value={email}\r\n                            onChange={handleChange('email')}\r\n                            placeholder='Email'\r\n                            autoComplete=\"nope\"\r\n                        />\r\n                        <input type='submit' value='Submit'/>\r\n                    </form>\r\n                </div>\r\n                <img src={image} alt='forgotpassword'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport image from '../assets/resetpassword.jpg';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function ResetPassword({match}) {\r\n    const [userData, setUserData] = useState({\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        token: \"\"\r\n    });\r\n\r\n    const {password, passwordConfirm, token} = userData;\r\n    useEffect(() => {\r\n        let token = match.params.token;\r\n        if(token){\r\n            setUserData({ ...userData, token });\r\n        }\r\n    }, [])\r\n\r\n    const handleChange = text => e => setUserData({...userData, [text]: e.target.value});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if((password === passwordConfirm) && passwordConfirm && password){\r\n            axios.put('/users/resetpassword', {\r\n                newPassword: password,\r\n                resetPasswordLink: token\r\n            })\r\n            .then(res => {\r\n                setUserData({ \r\n                    ...userData,\r\n                    password: \"\",\r\n                    passwordConfirm: ''\r\n                });\r\n                toast.success(res.data.message);\r\n            })\r\n            .catch(err => {\r\n                toast.error(err.response.data.error);\r\n            })\r\n        } else {\r\n            toast.error('Passwords don\\'t match');\r\n        }\r\n    }\r\n    return (\r\n        <div className='background'>\r\n            <ToastContainer/>\r\n            <div className='background-flex'>\r\n                <div className='flex-register'>\r\n                    <h2>Reset password</h2>\r\n                    <form className='flex-form' onSubmit={handleSubmit}>\r\n                        <input\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={handleChange('password')}\r\n                            placeholder='Password'\r\n                        />\r\n                        <input\r\n                            type='password'\r\n                            value={passwordConfirm}\r\n                            onChange={handleChange('passwordConfirm')}\r\n                            placeholder='Confirm password'\r\n                        />\r\n                        <input type='submit' value='Submit'/>\r\n                    </form>\r\n                    <span className='separator'><p style={{margin: '2.5rem 0'}}>or</p></span>\r\n                    <Link to='/login' className='login-btn' style={{fontWeight: 'bold'}}>\r\n                        <i className='fa fa-user' style={{marginRight: '0.5rem'}}></i>Login\r\n                    </Link>\r\n                </div>\r\n                <img src={image} alt='forgotpassword'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { isAuth, signout } from '../helpers/auth';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function User({match, history}) {\r\n    const [userData, setUserData] = useState({\r\n        username: \"\",\r\n        email: \"\"\r\n    });\r\n\r\n    //Abort Signal -> React warning appeared\r\n    const controller = new AbortController()\r\n    const signal = controller.signal\r\n\r\n    useEffect(() => {\r\n        let userId = localStorage.user;\r\n        if(localStorage.length){\r\n            axios.get(`/users/${userId.replace(/['\"]+/g, '')}`, {signal})\r\n                .then(res => {\r\n                    setUserData({\r\n                        _id: res.data._id,\r\n                        username: res.data.username,\r\n                        email: res.data.email\r\n                    })\r\n                    toast.success('Welcome!')\r\n                })\r\n                .catch(err => toast.error(err.response.data.error));\r\n        }\r\n    }, [match.params]);\r\n\r\n    const {username, email} = userData;\r\n\r\n    return (\r\n        <div className='background'>\r\n            <ToastContainer/>\r\n            <div className='background-white'>\r\n                {isAuth() ?\r\n                    <div className='background-login'>\r\n                        <h2>Welcome, <span style={{color: 'crimson'}}>{username}</span></h2>\r\n                        <h2>You signed in with <span style={{color: 'crimson'}}>{email}</span> email</h2>\r\n                        <button\r\n                            onClick={() => {\r\n                                signout(() => {\r\n                                    toast.success('Signout successful');\r\n                                    history.push('/');\r\n                                });\r\n                            }}\r\n                        >\r\n                            <i className='fa fa-sign-out' style={{marginRight: '0.4rem'}}/>Signout\r\n                        </button>\r\n                    </div>\r\n                        :\r\n                    <div className='background-login'>\r\n                        <h2>Access denied to unauthorized users</h2>\r\n                        <Link to='/login'>\r\n                            <button><i className='fa fa-user' style={{marginRight: '0.4rem'}}/>Login</button>\r\n                        </Link>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport Activation from './components/Activation';\r\nimport ForgotPassword from './components/ForgotPassword';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport User from './components/User';\r\n\r\nexport default function App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={Home}/>\r\n                <Route path='/register' component={Register}/>\r\n                <Route path='/login' component={Login}/>\r\n                <Route path='/users/activate/:token' component={Activation}/>\r\n                <Route path='/forgotpassword' component={ForgotPassword}/>\r\n                <Route path='/resetpassword/:token' component={ResetPassword}/>\r\n                <Route path='/user/:userId' component={User}/>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}